<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.boracompany</groupId>
	<artifactId>mygame</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>mygame</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<junit.version>4.13.2</junit.version>
		<assertj.swing.version>3.17.1</assertj.swing.version>
		<mockito.version>4.4.0</mockito.version>
		<mongo.driver.version>3.12.10</mongo.driver.version>
		<mongo.java.server.version>1.39.0</mongo.java.server.version>
		<testcontainers.version>1.19.3</testcontainers.version>
		<picocli.version>4.6.1</picocli.version>
		<cucumber.version>5.5.0</cucumber.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo.driver.version}</version>
		</dependency>
		<dependency>
			<!-- required to see Mongo Java Driver logs -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj.swing.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.bwaldvogel</groupId>
			<artifactId>mongo-java-server</artifactId>
			<version>${mongo.java.server.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>


		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>

						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>

							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
								<source>src/bdd/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/bdd/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>
										com.boracompany.mygame.App</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
		
	</build>
	<profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.44.0</version>
            <configuration>
              <!-- Docker custom networks mentioned in the run image configurations 
                will be created automatically during "start" and removed during "stop". -->
              <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
              <images>
                <image>
                  <name>java-mongo-hello-java</name>
                  <build>
                    <contextDir>${project.basedir}</contextDir>
                  </build>
                  <run>
                    <network>
                      <mode>custom</mode>
                      <name>my-network</name>
                    </network>
                    <wait>
                      <log>Hello World!</log>
                      <time>10000</time>
                    </wait>
                    <dependsOn>
                      <container>mongo</container>
                    </dependsOn>
                  </run>
                </image>
                <image>
                  <name>mongo:4.4.3</name>
                  <alias>mongo</alias>
                  <run>
                    <network>
                      <mode>custom</mode>
                      <name>my-network</name>
                      <alias>mongodb</alias>
                    </network>
                    <ports>
                      <port>mongo.port:27017</port>
                    </ports>
                    <wait>
                      <http>
                        <url>http://localhost:${mongo.port}</url>
                        <method>GET</method>
                        <status>200</status>
                      </http>
                      <time>10000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <alias>app</alias>
                  <external>
                    <type>compose</type>
                    <basedir>${project.basedir}</basedir>
                  </external>
                  <run>
                    <wait>
                      <log>Hello World!</log>
                      <time>10000</time>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>docker-build-image</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-verify</id>
                <phase>verify</phase>
                <goals>
                  <goal>start</goal>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
